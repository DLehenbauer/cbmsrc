.PAG 'ESCAPE'
NESCMS=13
SEQUEN	STA ESCFLG      ;CLEAR THE ESCAPE FLAG
	LDA DATA        ;GET THE CHARACTER
	LDX #NESCMS     ;GET NUMBER OF COMMANDS
FNDCMD	CMP EXCMDS,X    ;IS IT THIS ONE?
	BEQ GOESC       ;BRANCH IF YES
	DEX
	BPL FNDCMD      ;SEARCH SOME SOMEMORE
	SEC             ;IT WAS NOT A VALID COMMAND
	LDA DATA
	RTS
.SKI
GOESC
	JSR ESCDSP      ;DISPATCH IT
	CLC             ;WE DID IT
	RTS
.SKI
ESCDSP	LDA ESCDS1,X
	PHA
	LDA ESCDS2,X
	PHA
	RTS
.PAG
EXCMDS
	.BYT 'I'        ;INSERT LINE
	.BYT 'D'        ;DELETE LINE
	.BYT 'E'        ;ERASE TO END OF LINE
	.BYT 'B'        ;ERASE TO BEGINING OF LINE
	.BYT 'G'        ;SET TO GRAPHICS MODE
	.BYT 'T'        ;SET TO TEXT MODE
	.BYT 'Q'        ;SCROLL DOWN
	.BYT 'R'        ;SCROLL UP
	.BYT 'C'        ;SETS LOWER RIGHT CORNER
	.BYT 'V'        ;SETS UPPER LEFT CORNER
	.BYT $1B        ;CLEARS QUOTE,INSERT AND REVERSE MODES
	.BYT 'A'        ;DISABLE SCROLLING
	.BYT 'F'        ;ENABLE SCROLLING
	.BYT 'M'        ;ENABLE/DISABLE LOGGICAL SCROLL
.SKI 2
.SKI
ESCDS2
	.BYT <ADRX1
	.BYT <ADRX2
	.BYT <ADRX3
	.BYT <ADRX4
	.BYT <ADRX5
	.BYT <ADRX6
	.BYT <ADRX7
	.BYT <ADRX8
	.BYT <ADRX9
	.BYT <ADRXA
	.BYT <ADRXB
	.BYT <ADRXC
	.BYT <ADRXD
	.BYT <ADRXE
.SKI
ESCDS1
	.BYT >ADRX1
	.BYT >ADRX2
	.BYT >ADRX3
	.BYT >ADRX4
	.BYT >ADRX5
	.BYT >ADRX6
	.BYT >ADRX7
	.BYT >ADRX8
	.BYT >ADRX9
	.BYT >ADRXA
	.BYT >ADRXB
	.BYT >ADRXC
	.BYT >ADRXD
	.BYT >ADRXE
.PAG
;******************************
;
;  INSERT LINE
;
;*****************************
.SKI
ILINE	LDA SCTOP       ;SAVE CURENT TOP OF SCREEN
	PHA
	LDA TBLX        ;MAKE CURENT TOP OF SCREEN
	STA SCTOP
	JSR BITSDN      ;MOVE EM DOWN
	JSR SCRDWN      ;NOW THE LINES
	PLA
	STA SCTOP       ;RESTORE THE TOP
	JSR STU10
	LDX TBLX        ;IF THIS IS A CONTINUED LINE CONTINUE
	INX             ;CHECK THE NEXT ONE
	TXA
	JSR GETBIT
	BCC NOTWRP      ;BRANCH IF NOT CONTINUED LINE
	JSR PUTBIT      ;ELSE TIE THEM TOGETHER
NOTWRP
	RTS
.SKI 3
;**************************
;
; DELETE LINE
;
;**************************
DLINE	JSR FISTRT      ;FIND START OF LINE
SECNDX	LDA SCTOP       ;SAVE CURRENT OF WINDOW
	PHA
	LDA TBLX        ;MAKE 1ST DISPLAY LINE TOP OF WINDOW
	STA SCTOP
	LDA LOGSCR      ;MAKE SURE LOGICAL SCRL IS OFF
	PHA
	LDA #0
	STA LOGSCR
	JSR BITSUP      ;SCROLL THE TOP LINE AWAY
	PLA
	STA LOGSCR
	LDA SCTOP       ;MAKE OLD 1ST LINE OF THIS 1 CURRENT
	STA TBLX
	PLA
	STA SCTOP
	LDY SCLF
	STY PNTR
	JMP STUPT       ;MAKE THIS LINE THE CURRENT ONE
.SKI 3
;******************************
;
; ERASE TO END OF LINE
;
;******************************
.SKI
ETOL	LDA PNTR        ;SAVE CHAR POINTER.
	CMP SCLF        ;IF WE'RE AT LEFT MARGIN THEN SCROLL 1
	BNE ERYES       ;BRANCH IF NOT AT LEFT MARG
ERYES	BEQ SECNDX
	PHA
	LDA TBLX
	PHA
PUTB	LDA #$20        ;PUT BLANKS TO EOL
PUTOUT	JSR DSPP        ;DISPLAY THE BLANKS
	CPY SCRT        ;DONE?
	BCS ETOLRT      ;BRANCH IF DONE
	JSR NXTCHR      ;BLANK OUT THE NEXT CHAR
	JMP PUTB        ;BRANCH ALWAYS
.SKI
ETOLRT	INC TBLX
	JSR GETBIT      ;SEE IF THIS LINE IS CONTTINUED
	BCC ETOUT       ;BRANCH IF NOT
	JSR SECNDX
ETOUT	PLA
	STA TBLX
	PLA
	STA PNTR
	JMP STUPT
.PAG
;*****************************
;
; ERASE TO START OF LINE
;
;*****************************
.SKI
ETSTOL	LDA PNTR        ;SAVE CURENT POSITION
	STA T3
	LDA SCLF
	STA PNTR
ETSOUT	LDA #$20
	JSR DSPP        ;PUT A BLANK
	CPY T3          ;DONE
	BCS ETSRTS      ;BRANCH IF SO
	JSR NXTCHR      ;DO THE NEXT CHAR
	TYA
	BPL ETSOUT      ;ALWAYS
ETSRTS	RTS
.SKI 3
;*******************************
;
; SET LOWER RIGHT CORNER
;
;*******************************
.SKI
BOTSET	LDA TBLX
	STA SCBOT
	LDA PNTR
	STA SCRT
	RTS
.SKI 3
;********************************
;
; SET UPPER RIGHT CORNER
;
;********************************
.SKI1
TOPSET	LDA TBLX
	STA SCTOP
	LDA PNTR
	STA SCLF
	RTS
.PAG
;********************************
;
; TURN OFF MODES
;
;********************************
.SKI
TOQM	LDA #0
	STA INSRT
	STA RVS
	STA QTSW
	RTS
.SKI
;
; DISABLE SCROLLING
;
DISCRO	LDA #$FF        ;CHANGE SCROLL STATUS
	EOR SCRDIS      ;SWITCH IT
	STA SCRDIS
	RTS
.SKI
;
; ENABLE SCROLLING
;
AUTOIN	LDA #$FF        ;SWITCH AUTO INSERT SWITCH
	EOR INSFLG
	STA INSFLG
	RTS
.SKI
DNSCRL	JSR BITSDN      ;MOVE BITS DOWN
	JMP SCRDWN      ;SCROLL DISPLAY DOWN 1
;**************************
;
; LOGICAL SCROLL ENABLE/DISABLE
;
;**************************
.SKI
LOGSON	LDA #$FF
	EOR LOGSCR
	STA LOGSCR
	RTS
SCROUP	LDA TBLX        ;SAVE CURENT LINE
	PHA
	JSR BITSUP      ;SCROLL SCREEN AND ADJUST BITMAP
	PLA
	STA TBLX
	JMP STUPT
ADRX1=ILINE-1
ADRX2=DLINE-1
ADRX3=ETOL-1
ADRX4=ETSTOL-1
ADRX5=GRCRT-1
ADRX6=TXCRT-1
ADRX7=SCROUP-1
ADRX8=DNSCRL-1
ADRX9=BOTSET-1
ADRXA=TOPSET-1
ADRXB=TOQM-1
ADRXC=DISCRO-1
ADRXD=AUTOIN-1
ADRXE=LOGSON-1
.END
