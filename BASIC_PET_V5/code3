.PAGE 'CODE3'
LIST	JSR RANGE       ;FIND RANGE
LIST4	JMP (ILIST)
NLIST	LDY #1
	STY DORES
	LDA (LOWTR)Y
	BEQ GRODY
	JSR STOP1       ;CHECK FOR STOP KEY ON
	BNE NOSTOP      ;BRANCH IF STOP KEY OFF
	CLC             ;MAKE STOP CODE THINK ITS AN END
	JMP BSTOP       ;DO A STOP/BREAK
NOSTOP	JSR CRDO
	INY
	LDA (LOWTR)Y
	TAX
	INY
	LDA (LOWTR)Y
	CMP LINNUM+1
	BNE TSTDUN
	CPX LINNUM
	BEQ TYPLIN
TSTDUN	BCS GRODY
TYPLIN	STY LSTPNT
	BIT EDSAV       ;IS THIS AN EDITOR SAVE?
	BMI PLOOP1      ;YES..SO NO LINE#
	JSR LINPRT
	LDA #' 
PRIT4	LDY LSTPNT
	AND #127
PLOOP	JSR OUTDO
	CMP #34
	BNE PLOOP1
	LDA DORES
	EOR #@377
	STA DORES
PLOOP1	INY
	BEQ GRODY
	LDA (LOWTR)Y
	BNE QPLOP
	TAY
	LDA (LOWTR)Y
	TAX
	INY
	LDA (LOWTR)Y
	STX LOWTR
	STA LOWTR+1
	BNE LIST4
GRODY	RTS             ;RETURN FROM LIST
.PAGE 'CODE3 (RESERVED SEARCH)'
RESSCH	LDY #>RESLST
	STY INDEX1+1
	LDY #<RESLST
	STY INDEX1
;POINT INDEX1 AT START OF WORD
	LDY #0
	TAX
	ASL A           ;CHK FOR END TOKEN
	BEQ PRTXIX
RESRCH	DEX
	BPL PRTXIT
RESCR1	INC INDEX1
	BNE RESCR2
	INC INDEX1+1
RESCR2	LDA (INDEX1)Y
	BPL RESCR1
	BMI RESRCH
PRTXIX	DEY             ;SPEC FOR END TOKEN
PRTXIT	RTS
QPLOP	BPL PLOOP
	CMP #PI
	BEQ PLOOP
;
	BIT CRNCH       ;TEST FOR EDITOR MODE
	BPL PLOOP       ;0=CRUNCH OFF
	BIT AIDFLG
	BPL QPLPO
	PHA
	TYA             ;CHECK FOR OLD PLACE
	CLC
	ADC LOWTR
	CMP OLDTXT
	BCC QPLPR
	LDA #$12        ;REVS
	JSR AIDSHF      ;SHIFT AID FLAG &OUTPUT .A
QPLPR	PLA
;
QPLPO	BIT DORES
	BMI PLOOP
	STY LSTPNT
	JSR RESSCH
;
PRIT3	INY             ;LIST WORD INDEXING BY .Y
PRIT3B	LDA (INDEX1)Y
	BMI PRIT4
	JSR OUTDO
	BIT AIDFLG      ;TURN OFF RVS AT END OF TOKEN?
	BVC PRIT3
	LDA #146        ;RVS-OFF
	JSR AIDSHF
	JMP PRIT3
;
AIDSHF	LSR AIDFLG      ;SHIFT AIDFLAG INTO NEXT PHASE
	JMP BSOUT       ;OUTPUT .A
.PAGE 'CODE3 (FOR)'
FOR	LDA #128
	STA SUBFLG
	JSR LET
	JSR FNDFOR
	BNE NOTOL
	TXA
	JSR INCFST      ;!INCREMENT PAST FOR ON STACK
	TAX
	TXS
	BNE NOTOL1      ;!JMP PAST PLA'S
NOTOL	PLA
	PLA
NOTOL1	LDA #DSIZE+5    ;!*2 BYTES
	JSR GETSTK
	JSR DATAN
	CLC
	TYA
	ADC TXTPTR
	PHA
	LDA TXTPTR+1
	ADC #0
	PHA
	LDA CURLIN+1
	PHA
	LDA CURLIN
	PHA
	LDA #TOTK
	JSR SYNCHR
	JSR CHKNUM
	JSR FRMNUM
	JSR PUSHF       ;! PUSH UNPACKED
;! POSSIBLE DECIMAL STUFF
LDFONE	LDA #<FONE
	LDY #>FONE
	JSR MOVFM
	JSR CHRGOT
	CMP #STEPTK
	BNE ONEON
	JSR CHRGET
	JSR FRMNUM
ONEON	JSR SIGN
	PHA             ;! ONTO THE STACK
	JSR PUSHF
	LDA FORTYP      ;!PUSH THE TYPE
	PHA             ;!
	LDA FORPNT+1
	PHA
	LDA FORPNT
	PHA
	LDA #FORTK
	PHA
.END
