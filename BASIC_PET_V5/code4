.PAG 'CODE4'
NEWSTT	JSR STOP
	TSX             ;SAVE STACK FOR RESTORE
	STX STKOLD
	LDA TXTPTR
	LDY TXTPTR+1
	CPY #BUFPAG
	BEQ DIRCON
	STA OLDTXT
	STY OLDTXT+1
DIRCON	LDY #0
	LDA (TXTPTR)Y
	BNE MORSTS
	LDY #2
	LDA (TXTPTR)Y
	CLC
	BNE DIRCN1
	JMP ENDCON
DIRCN1	INY
	LDA (TXTPTR)Y
	STA CURLIN
	INY
	LDA (TXTPTR)Y
	STA CURLIN+1
	TYA
	ADC TXTPTR
	STA TXTPTR
	BCC GONE
	INC TXTPTR+1
GONE	JMP (IGONE)
NGONE	JSR CHRGET      ;GET STMT TYPE
NGONE1	JSR GONE3
	JMP NEWSTT      ;NEW STMT TYPE
GONE3	BEQ ISCRTS      ;TERMINATOR? TRY AGAIN
GONE2	LDY #$F0        ;SET UNDEFINED
	STY TARGET
	STY FORTYP
	SBC #ENDTK      ;IS TOKEN <80?
	BCC GLET        ;YES: LTR/NUMBER/STRING
	CMP #SCRATK+1-128 ;LAST STATEMENT TOKEN?
	BCS SNERR1      ;YES...SYNTAX ERROR
.SKI
GONE4	ASL A           ;TOKEN IS INDEX
	TAY
	LDA STMDSP+1,Y  ;DISPATCH ADDRESS-1
	PHA             ;ON STACK...
	LDA STMDSP,Y
	PHA
	JMP CHRGET      ;DISPATCH BY RTS
GLET	JMP LET
MORSTS	CMP #':
	BEQ GONE
SNERR1	JMP SNERR
.SKI 3
RESTOR	BEQ RSTALL      ;IS RESTORE C/R
	JSR LINGET      ;GET LINE NUMBER
	JSR FNDLIN
	BCS REST05      ;FOUND LINE
	JMP USERR       ;UNDEF'D STATEMENT ERR
REST05	JSR CHRGOT      ;MUST BE :
	BEQ REST10      ;A TERMINATOR
	JMP SNERR       ;SOMETHING ELSE
REST10	LDA LOWTR       ;LINE START ADDR
	LDY LOWTR+1
	JMP REST30
.SKI 3
;RESTORE TO START OF TEXT
;
RSTALL	LDA TXTTAB
	LDY TXTTAB+1
REST30	SEC             ;POINT AT PREVIOUS LINE
	SBC #1
	BCS RESFIN
	DEY
RESFIN	STA DATPTR
	STY DATPTR+1
ISCRTS	RTS
.SKI
END	CLC             ;TELL THEM ITS AN END NOT A BREAK
	BIT ACTERR      ;TEST FOR ON ERROR
	BVC NACT        ;BRANCH IF NONE
	LDX ERRBYT      ;ELSE GET ERROR CODE
	LDA ERRLIN      ;GET ERROR LINE # JUST IN CASE
	STA CURLIN      ;MAKE IT CURRENT
	LDA ERRLIN+1    ;GET HIGH ORDER BYTE
	STA CURLIN+1    ;PUT IT AWAY
	JMP GETERR      ;PRINT THE ERROR
;
BSTOP	BNE CONTRT
;
NACT	LDA TXTPTR
	LDY TXTPTR+1
	LDX CURLIN+1
	INX
	BEQ DIRIS
	STA OLDTXT
	STY OLDTXT+1
STPEND	LDA CURLIN
	LDY CURLIN+1
	STA OLDLIN
	STY OLDLIN+1
DIRIS	PLA
	PLA
ENDCON	LDA #<BRKTXT
	LDY #>BRKTXT
	BCC GORDY
	JSR CRDO        ;OUTPUT A CARRIAGE RETURN
	LDA #$80        ;GET BIT 7
	AND ERRBYT      ;MAKE SURE OTHER ARE OFF
	STA ERRBYT
	LDX #BRSTOP     ;GET BREAK ERROR MSG
	JMP GETERR
GORDY	JMP READY
CONT	BNE CONTRT
	LDX #ERRCN
	LDY OLDTXT+1
	BNE *+5
	JMP ERROR
	LDA OLDTXT
	STA TXTPTR
	STY TXTPTR+1
	LDA OLDLIN
	LDY OLDLIN+1
	STA CURLIN
	STY CURLIN+1
CONTRT	RTS
RUN	BNE *+5
	JMP RUNC
	JSR CLEARC
	JMP RUNC2
GOSUB	LDA #3
	JSR GETSTK
	LDA TXTPTR+1
	PHA
	LDA TXTPTR
	PHA
	LDA CURLIN+1
	PHA
	LDA CURLIN
	PHA
	LDA #GOSUTK
	PHA
RUNC2	JSR CHRGOT
	JSR GOTO
	JMP NEWSTT
GOTO	JSR LINGET
	JSR REMN
	LDA CURLIN+1
	CMP LINNUM+1
	BCS LUK4IT
	TYA
	SEC
	ADC TXTPTR
	LDX TXTPTR+1
	BCC LUKALL
	INX
	BCS LUKALL
LUK4IT	LDA TXTTAB
	LDX TXTTAB+1
LUKALL	JSR FNDLNC
	BCC USERR
	LDA LOWTR
	SBC #1
	STA TXTPTR
	LDA LOWTR+1
	SBC #0
	STA TXTPTR+1
GORTS	RTS
.END
