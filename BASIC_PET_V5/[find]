.PAG 'FIND'
;**********************************
;
; CHANGE AND FIND COMMANDS
;
;**********************************
.SKI
CHANGX	LDX #4          ;SET A FLAG FOR CHANGE
	BNE FND010      ;BRA
FINDXX	LDX #0          ;SET A FLAG FOR FIND
FND010	STX AIDFLG
	STA T2          ;SAVE DELIMITER
	LDX #0
	STX LSTPNT      ;START FLAG FOR FIND CMD
	JSR GETSTR      ;READ FIRST STRING
	LDA AIDFLG      ;A CHANGE COMMAND ?
	CMP #4
	BNE FND050      ;NO - SKIP
	LDX #2
	STX LSTPNT      ;YES - SET FLAG FOR CHANGE
	JSR GETSTR      ;INPUT SECOND STRING
FND050	JSR CHRGET      ;MORE STUFF (RANGE) ?
	JSR RANGE       ;GET RANGE SET PTRS
	JSR PRTRTN      ;CHK FOR SYNTAX
	LDA LOWTR       ;COPY START POINTER
	LDX LOWTR+1
	STA TXTPTR
	STX TXTPTR+1
	JSR CRDO        ;PRT (CR) (LF)
	BNE FND200      ;ALWAYS
FND150	INY
	TYA
	CLC
	ADC TXTPTR      ;CALC PTR TO NEXT LINE
	STA TXTPTR
	BCC FND200
	INC TXTPTR+1
FND200	JSR GRAB        ;END OF SOURCE ?
	BEQ FDONE       ;YES - DONE
	JSR CMPNUM      ;CHECK LINE RANGE
	BCS FND300      ;NOT DONE
FDONE	LDA #0          ;CLR CHANGE FLAG
	STA AIDFLG
	JMP NOTDEL      ;FIX LINKS, THEN DONE
FND300	STY SIZE        ;SAVE Y
FND400	INC SIZE        ;BUMP LAST START POINT
	LDY SIZE        ;GET NEW START POINT
	LDX STREND      ;START OF COMPAIR STRING
	LDA STREND+1    ;SET CMP CTR
	STA T2
FND500	LDA (TXTPTR),Y  ;END OF LINE ?
	BEQ FND150      ;YES - START NEW LINE
	CMP BUFOFS,X    ;MATCH ?
	BNE FND400      ;NO
	INX
	INY
	DEC T2          ;MATCHED ALL ?
	BNE FND500      ;NO
	DEY
	STY COUNT       ;YES - SAVE LAST Y
	STY SVXT
	STY SIZE
	LDA AIDFLG      ;A CHANGE COMMAND ?
	BEQ PRTIT       ;NO - JUST PRINT IT
CHGIT	JSR SETPTR      ;SET BOTH INDEXS
	LDA FRETOP+1    ;CALC DIFF OF STRINGS
	SEC
	SBC STREND+1
	STA T1
	BEQ MOVNOT      ;STRINGS EQUAL, NO MOVE
TESTLN	INY
TDONE	BEQ FDONE       ;256 WRAP, GET OUT
	LDA (TXTPTR),Y  ;END OF LINE
	BNE TESTLN      ;NO
	CLC
	TYA
	ADC T1
	CMP #2          ;LINE TOO SHORT TO CHANGE ?
	BCC PRTIT       ;YES - JUST PRINT IT
	CMP #240        ;LINE TOO LONG ?
	BCS PRTIT       ;YES
	LDA T1          ;SET PLUS/MINUS
	BPL CHG100      ;NO BORROW
	DEC T2          ;HI BYTE NEG.
CHG100	CLC
	ADC COUNT       ;CALC MOVE TO PTR
	STA SVXT
	BCS DWNDWN      ;A MOVE DOWN
UPUP	JSR MOVEUP      ;MOVE UP
	BEQ MOVNOT      ;ALWAYS
DWNDWN	JSR MOVDWN
MOVNOT	LDA SVXT        ;CALC BEGIN OLD STR
	SEC
	SBC FRETOP+1
	TAY
	INY
	LDA FRETOP+1
	BEQ MNT200      ;NEW STRING EMPTY, SKIP
	STA T3          ;NEW STRING CTR
	LDX FRETOP      ;INDEX TO NEW STRING
MNT100	LDA BUFOFS,X    ;GET NEW STRING
	STA (TXTPTR),Y
	INX
	INY
	DEC T3          ;DONE ?
	BNE MNT100      ;NO
MNT200	DEY             ; BACK UP ONE
	STY SIZE        ;SAVE Y REG
	JSR LNKPRG      ;LINK LINES UP
	CLC
	LDA VARTAB      ;CALC NEW END OF MEMORY
	ADC T1
	STA VARTAB
	LDA VARTAB+1
	ADC T2
	STA VARTAB+1
	LDY SIZE        ;GET CHANGE SIZE UP
PRTIT	STY SIZE        ;SAVE TXTPTR INDEX
	LDA LINNUM      ;SAVE LINE NUMBER ...
	PHA
	LDA LINNUM+1    ;THAT WE END ON
	PHA
	LDA INPPTR      ;LINE LOCATION
	LDX INPPTR+1
PRTIT1	JSR LLLL1       ;LIST LINE
	PLA             ;RESTORE ENDING LINE NUMBER
	STA LINNUM+1
	PLA
	STA LINNUM
	LDA AIDFLG      ;COMPARE
	BNE PRTIT3
	LDY SIZE
PRTIT2	LDA (TXTPTR)Y   ;CHECK FOR 00...
	BEQ PRTIT4      ;...UNTILL DONE
	INY
	JMP PRTIT2
PRTIT3	JMP FND400
PRTIT4	JMP FND150
;
; GET STRINGS FOR FIND AND CHANGE
;
GETSTR	LDY TXTPTR      ;START OF FIRST STRING
	INY
	STY STREND,X    ;BEGIN OF STRING INDEX
	LDA #0
	STA STREND+1,X  ;ZERO LENGTH
GTS200	LDA BUFOFS,Y    ;END
	BEQ RNSERR      ;YES - SYNTAX ERROR
	CMP T2          ;NO - EEQUAL DELIMITER
	BEQ GTS500      ;YES
	INC STREND+1,X  ;INC STRING LENGTH
	INY
	BNE GTS200      ;ALWAYS
GTS500	STY TXTPTR      ;FIX TEXT POINTER
	RTS
RNSERR	JMP SNERR
;
; SETS INDEX1 AND INDEX2
;
; INDEX1=LOWTR
; INDEX2=VARTAB
;
SETPTR	LDA TXTPTR
	STA INDEX1
	LDA TXTPTR+1
	STA INDEX1+1
	LDA VARTAB
	STA INDEX2
	LDA VARTAB+1
	STA INDEX2+1
	RTS
;
; COMPAIRS INDEX1 AND INDEX2
;
CMPINX	LDA INDEX1
	CMP INDEX2
	BNE CMPRTS
	LDA INDEX1+1
	CMP INDEX2+1
CMPRTS	RTS
;
; MOVES MEMORY DOWN
;
MOVDWN	LDY COUNT
	INY
	LDA (INDEX1),Y
	LDY SVXT
	INY
	STA (INDEX1),Y
	JSR CMPINX      ;DONE ?
	BNE MDN100      ;NO
	RTS
MDN100	INC INDEX1
	BNE MOVDWN
	INC INDEX1+1
	BNE MOVDWN      ;ALWAYS
;
; MOVES MEMORY UP
;
MOVEUP	LDY COUNT
	LDA (INDEX2),Y
	LDY SVXT
	STA (INDEX2),Y
	JSR CMPINX      ;DONE ?
	BNE MUP100      ;NO
	RTS
MUP100	LDA INDEX2      ;ZERO ?
	BNE MUP200      ;NO - NO BORROW
	DEC INDEX2+1
MUP200	DEC INDEX2
	JMP MOVEUP
;
; COMPAIRS (TXTPTR),Y WITH LINNUM
;
; C=1 LINNUM => (TXTPTR),Y
; C=0 LINNUM < (TXTPTR),Y
;
CMPNUM	JSR GRAB        ;GET LINE # LO
	STA INPPTR      ;SAVE TO PRINT LATER
	JSR GRAB
	STA INPPTR+1
	SEC
	LDA LINNUM
	SBC INPPTR
	LDA LINNUM+1
	SBC INPPTR+1
	RTS
;
.END
