.PAG 'CODE13'
	LDY CURTOL
	BEQ DECCUR
ZERITA	DEY
	STA (ARYPNT)Y
	DEX             ;!COUNT OUT DEC INCREMENTS
	BNE ZERT1       ;!DEC NEEDS TYPE
	LDA VALTYP      ;!IS IT DEC?
	CMP #02
	BNE ZERT2       ;!NO-FERGET IT FOR A LOT
	STA (ARYPNT),Y  ;!STORE TYPE
	LDX #DSIZE      ;!SET DEC SIZE
ZERT2	LDA #0          ;!RESET
ZERT1	CPY #0          ;Y LOOP
	BNE ZERITA
	BNE ZERITA
DECCUR	DEC ARYPNT+1
	DEC CURTOL+1
	BNE ZERITA
	INC ARYPNT+1
	SEC
	LDA STREND
	SBC LOWTR
	LDY #2
	STA (LOWTR)Y
	LDA STREND+1
	INY
	SBC LOWTR+1
	STA (LOWTR)Y
	LDA DIMFLG
	BNE DIMRTS
	INY
GETDEF	LDA (LOWTR)Y
	STA COUNT
	LDA #0
	STA CURTOL
INLPNM	STA CURTOL+1
	INY
	PLA
	TAX
	STA INDICE
	PLA
	STA INDICE+1
	CMP (LOWTR)Y
	BCC INLPN2
	BNE BSERR7
	INY
	TXA
	CMP (LOWTR)Y
	BCC INLPN1
BSERR7	JMP BSERR
OMERR1	JMP OMERR
INLPN2	INY
INLPN1	LDA CURTOL+1
	ORA CURTOL
	CLC
	BEQ ADDIND
	JSR UMULT
	TXA
	ADC INDICE
	TAX
	TYA
	LDY INDEX1
ADDIND	ADC INDICE+1
	STX CURTOL
	DEC COUNT
	BNE INLPNM
	STA CURTOL+1
	JSR GETSIZ      ;!FOR MULTIPLY
	STX ADDEND
	LDA #0
	JSR UMULTD
	TXA
	ADC ARYPNT
	STA VARPNT
	TYA
	ADC ARYPNT+1
	STA VARPNT+1
	TAY
	JSR SETYPE      ;GET TYPE-  0,1,2,-1
	LDA TARGET      ;!HAS IT BEEN SET?
	CMP #$F0
	BNE DIMX1       ;!YES DON'T CHANGE
	STX TARGET      ;NO-DO IT
DIMX1	JMP FINX6
DIMRTS	RTS
GETSIZ=* ;GET ELEMENT SIZE BASED
;!ON SYMBOL VALUE IN VARNAM-NO FUNCTIONS ---
	LDA VARNAM      ;!FIRST BYTE MS BIT
	ASL A           ;!PUSH TO CARRY
	LDA VARNAM+1    ;!2'N BYTE MS BIT
	ROL A
	ROL A           ;!BOTH BITS LOW
	AND #$03
	TAX             ;!USE AS INDEX
	LDA TABSIZ,X    ;!GET IT
	TAX
	RTS
TABSIZ	.BYTE 5,3,13,2
;!  BIN,STRING,DEC,INT
;---------------
;---- MULT ROUTINE --
UMULT	STY INDEX
	LDA (LOWTR)Y
	STA ADDEND
	DEY
	LDA (LOWTR)Y
UMULTD	STA ADDEND+1
	LDA #16
	STA DECCNT
	LDX #0
	LDY #0
UMULTC	TXA
	ASL A
	TAX
	TYA
	ROL A
	TAY
	BCS OMERR1
	ASL CURTOL
	ROL CURTOL+1
	BCC UMLCNT
	CLC
	TXA
	ADC ADDEND
	TAX
	TYA
	ADC ADDEND+1
	TAY
	BCS OMERR2
UMLCNT	DEC DECCNT
	BNE UMULTC
UMLRTS	RTS
OMERR2	JMP OMERR
;--------------
FRE	LDA VALTYP
	BEQ NOFREF
	JSR FREFAC
NOFREF	JSR GARBA2
	SEC
	LDA FRETOP
	SBC STREND
	TAY
	LDA FRETOP+1
	SBC STREND+1
GIVAYF	LDX #0
	STX VALTYP
	STA FACHO
	STY FACHO+1
	LDX #144
	JMP FLOATS
POSO	LDY TRMPOS
SNGFLT	LDA #0
	BEQ GIVAYF
ERRDIR	LDX CURLIN+1
	INX
	BNE DIMRTS
	LDX #ERRID
	.BYT $2C
ERRGUF	LDX #ERRUF
	JMP ERROR
;----  DEFINE FUNCTION --
DEF	JSR GETFNM
	JSR ERRDIR
	JSR CHKOPN
	LDA #128
	STA SUBFLG
	JSR PTRGET
	JSR CHKNUM
	JSR CHKCLS
	LDA #EQULTK     ;!OLD ERROR
	JSR SYNCHR
;!  ------  PHA MOVED
	LDA VARPNT+1
	PHA
	LDA VARPNT
	PHA
	LDA TXTPTR+1
.END
