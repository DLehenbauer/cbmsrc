.PAG 'CODE10'
; RSR 5/29/80
ISVAR	JSR PTRGET
ISVRET	STA FACMO
	STY FACLO
	STX FACTYP      ;TYPE IN FACTYP
	LDA VARNAM
	LDY VARNAM+1
	LDX VALTYP
	BEQ GOOO
	LDX #0
	STX FACOV
	LDX FACLO       ;IS IT AN ARRAY?
ZZ8	=3000+OFFSET
	CPX #>ZZ8       ;:ABOVE BASIC?
	BCC STRRTS      ;AN ARRAY. . .
	CMP #'T         ; TI$ TEST
	BNE ISVDS
	CPY #$C9
	BNE ISVDS
	JSR GETTIM
	STY TENEXP      ;RETURNS WITH .Y=0
	STY FBUFPT
	LDY #6
	STY DECCNT
	LDY #FDCEND-FOUTBL
	JSR FOXTIM      ;CONVERT TO H/M/S
	JMP TIMSTR
ISVDS	CMP #'D
	BNE STRRTS
	CPY #$D3
	BNE STRRTS
	JSR CHKDS
	LDA DSDESC+1
	LDY DSDESC+2
	JMP STRLIT
STRRTS	RTS
GOOO	LDX INTFLG
	BPL GOOOOO
	LDY #0
	LDA (FACMO)Y
	TAX
	INY
	LDA (FACMO)Y
	TAY
	TXA
	JMP GIVAYF
GOOOOO	LDX FACLO       ;AN ARRAY?
	CPX #>ZZ8
	BCC GOMOVF
	CMP #'T
	BNE QSTATV
	CPY #'I
	BNE GOMOVF
	JSR GETTIM
	TYA
	LDX #160
	JMP FLOATB
ZZ7=CTIMR-2
CHKDS	LDA DSDESC
	BNE STRRTS
	JMP GETDSZ
GETTIM	LDA #<ZZ7
	LDY #>ZZ7
	SEI
	JSR MOVFM
	CLI
	STY FACHO
	RTS
QSTATV	CMP #'S
	BNE QDSAV
	CPY #'T
	BNE QDSAV
	LDA CSTAT
	JMP FLOAT
QDSAV	CMP #'D
	BNE GOMOVF
	CPY #'S
	BNE GOMOVF
	JSR CHKDS
	LDY #0
	LDA (DSDESC+1)Y
	AND #$F
	ASL A
	STA GARBFL
	ASL A
	ASL A
	ADC GARBFL
	STA GARBFL
	INY
	LDA (DSDESC+1)Y
	AND #$F
	ADC GARBFL
	JMP FLOAT
;-------------------
GOMOVF	LDA FACMO
	LDY FACMO+1
	LDX FACTYP      ;!MEMORY TYPE
	JMP MOVFMT      ;!MOVE BY TYPE
;------------------
ISFUN	ASL A
	PHA
	TAY
	JSR CHRGET
	CPY #LASNUM+LASNUM-253
	BCC OKNORM
	LDX #$FF        ;THIS IS A STRING FUNCTION...
	JSR TARTCK      ;...DEFAULT CHECK
	JSR CHKOPN
	JSR FRMEVL
	JSR CHKCOM
	JSR CHKSTR
	PLA
	TAX
	LDA FACMO+1
	PHA
	LDA FACMO
	PHA
	TXA
	PHA
	JSR GETBYT
	PLA
	TAY
	TXA
	PHA
	JMP FINGO
;
OKNORM	;THIS IS A NORMAL FUNCTION .X HAS DEFAULT...
	JSR TARTCK      ;...CHECK TARGET DECIMAL DEFAULT
	JSR PARCH1
	LDA FACTYP      ;!SEE IF CAN TAKE DEC INPUT
	BEQ FINGO1      ;!NO TEST  REQ'D-IS BINARY
	PLA             ;JF'S DISPATCH
	PHA
	CMP #DECFUN+DECFUN-255
	BEQ FINGO1
	BCC FINGO1
	LDA FACTYP      ;WATCH OUT FOR STRINGS !
	CMP #$FF
	BEQ FINGO1
	LDA #0          ;BINARY ONLY FUNCTIONS
	JSR DCONF       ;MAKE SURE FAC IS BINARY
FINGO1	PLA
	TAY
FINGO	LDA TARGET      ;SAVE GLOBAL TARGET
	PHA
	LDA FACTYP      ;FACTYP IS LOCAL TARGET
	STA TARGET
	LDA FUNDSP-ONEFUN-ONEFUN+254,Y
	STA JMPER+1
	LDA FUNDSP-ONEFUN-ONEFUN+255,Y
	STA JMPER+2
	JSR JMPER
	PLA             ;RESTORE GLOBAL TARGET
	STA TARGET
	JMP CHKNUM
OROP	LDA #255
	.BYT $2C
ANDOP	LDA #0
	PHA             ;SAVE FOR FUTURE COUNT
	LDA #0          ;FOR CONVERT
	JSR DCONF       ;LOGICAL OPS BIN ONLY
	LDA #0
	JSR DCONA
	PLA             ;FUTURE COUNT
	STA COUNT
	JSR AYINT
	LDA FACMO
	EOR COUNT
	STA INTEGR
	LDA FACLO
	EOR COUNT
	STA INTEGR+1
	JSR MOVFA
	JSR AYINT
	LDA FACLO
	EOR COUNT
	AND INTEGR+1
	EOR COUNT
	TAY
	LDA FACMO
	EOR COUNT
	AND INTEGR
	EOR COUNT
	JMP GIVAYF
DOREL	JSR CHKVAL
	BCS STRCMP
	LDA ARGSGN
	ORA #127
	AND ARGHO
	STA ARGHO
	LDA ARGTYP      ;CONVERT FAC TO ARGTYPE...
	JSR DCONF       ;...FOR COMPARE
	LDA ARGTYP      ;CHK FOR ...
	LSR A
	BEQ DORELF      ;BIN & INT TYPES
	JSR DCOMP       ;BCD TYPE
	JMP DORELA
DORELF	LDA #<ARGEXP
	LDY #>ARGEXP
	JSR FCOMP
DORELA	TAX
	JMP QCOMP
STRCMP	LDA #0
	STA VALTYP
	DEC OPMASK
	JSR FREFAC
	STA DSCTMP
	STX DSCTMP+1
	STY DSCTMP+2
	LDA ARGMO
	LDY ARGMO+1
	JSR FRETMP
	STX ARGMO
	STY ARGMO+1
	TAX
	SEC
	SBC DSCTMP
	BEQ STASGN
	LDA #1
	BCC STASGN
	LDX DSCTMP
	LDA #$FF
STASGN	STA FACSGN
	LDY #255
	INX
NXTCMP	INY
	DEX
	BNE GETCMP
	LDX FACSGN
QCOMP	BMI DOCMP
	CLC
	BCC DOCMP
GETCMP	LDA (ARGMO)Y
	CMP (DSCTMP+1)Y
	BEQ NXTCMP
	LDX #$FF
	BCS DOCMP
	LDX #1
DOCMP	INX
	TXA
	ROL A
	AND DOMASK
	BEQ GOFLOT
	LDA #$FF
GOFLOT	JMP FLOAT
.END
