.PAG 'STACK'
FNDFOR	TSX
	INX
	INX
	INX
	INX
FFLOOP	LDA 257,X
	CMP #FORTK
	BNE FFRTS
	LDA FORPNT+1
	BNE CMPFOR
	LDA $104,X      ;!GET FORTYP
	STA FORTYP      ;!AND STORE IT ALSO
	LDA 258,X
	STA FORPNT
	LDA 259,X
	STA FORPNT+1
CMPFOR	CMP 259,X
	BNE ADDFRS
	LDA FORPNT
	CMP 258,X
	BEQ FFRTS
ADDFRS=* ;!PUSH STACK (X) ADDRESS BACK
	JSR INCFST      ;! NEW STACK ADDR IN A
	TAX
	BNE FFLOOP
FFRTS	RTS
;--------------------
;  PUSH STACK BACK 1 FOR ENTRY
;--------------------
INCFST=*
	LDA $105,X      ;!GET STEP TYPE ENTRY
	JSR ADDSTK      ;!ADD PROPER # TO X AND LEAVE  IN A
	TAX             ;!UP BY SIZE
	LDA $106,X      ;!GET"TO"TYPE
	JSR ADDSTK      ;!AGAIN
	ADC #9          ;!FOR ALL OTHER STUFF
	BCC *+5         ;!!! ERROR TEST
	JSR ERRORZ      ;!!
	RTS             ;!
;---------------------
; ---  INC X BY SIZE IMPLIED BY
;----  THE TYPE CODE IN A
;---------------------
ADDSTK=*
	BEQ INTAS       ;!DO INTEGER
	CMP #02         ;!!!MUST BE DECIMAL
	BEQ *+5         ;!!!
	JSR ERRORZ      ;!!!
	TXA             ;!
	CLC             ;!
	ADC #DSIZE      ;!
	BCC *+5         ;!!TEST
	JSR ERRORZ      ;!!!
	RTS
;---------
INTAS	CLC
	TXA
	ADC #BSIZE+2    ;!BINARY SIZE
	BCC *+5         ;!!!
	JSR ERRORZ      ;!!
	RTS
;-----------------------
BLTU	JSR REASON
	STA STREND
	STY STREND+1
BLTUC	SEC
	LDA HIGHTR
	SBC LOWTR
	STA INDEX
	TAY
	LDA HIGHTR+1
	SBC LOWTR+1
	TAX
	INX
	TYA
	BEQ DECBLT
	LDA HIGHTR
	SEC
	SBC INDEX
	STA HIGHTR
	BCS BLT1
	DEC HIGHTR+1
	SEC
BLT1	LDA HIGHDS
	SBC INDEX
	STA HIGHDS
	BCS MOREN1
	DEC HIGHDS+1
	BCC MOREN1
BLTLP	LDA (HIGHTR)Y
	STA (HIGHDS)Y
MOREN1	DEY
	BNE BLTLP
	LDA (HIGHTR),Y
	STA (HIGHDS),Y
DECBLT	DEC HIGHTR+1
	DEC HIGHDS+1
	DEX
	BNE MOREN1
	RTS
GETSTK	ASL A
	ADC #NUMLEV+NUMLEV+16
	BCS OMERR
	STA INDEX
	TSX
	CPX INDEX
	BCC OMERR
	RTS
REASON	CPY FRETOP+1
	BCC REARTS
	BNE TRYMOR
	CMP FRETOP
	BCC REARTS
TRYMOR	PHA
	LDX #8+ADDPRC
	TYA
REASAV	PHA
	LDA HIGHDS-1,X
	DEX
	BPL REASAV
	JSR GARBA2
	LDX #248-ADDPRC
REASTO	PLA
	STA HIGHDS+8+ADDPRC,X
	INX
	BMI REASTO
	PLA
	TAY
	PLA
	CPY FRETOP+1
	BCC REARTS
	BNE OMERR
	CMP FRETOP
	BCS OMERR
REARTS	RTS
.END
