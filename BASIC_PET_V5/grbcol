.PAGE 'GARBAGE COLLECTION'
;*******************************
;*
;* THIS ROUTINE LOOKS FOR AND
;* SQUASHES OUT ANY UNUSED STRING
;* SPACE IT FINDS. THUS RETURNING
;* THE SPACE FOR FUTURE USE BY
;* THE STRING ROUTINES.
;* GARBA2 IS CALLED ONLY WHEN
;* BASIC NEED SPACE OF A FRE
;* INSTRUCTION IS USED.
;*
;*******************************
;*
GARBA2	LDY #$00        ;SET UP FLAG
	STY HIGHDS
	LDA MEMSIZ      ;START AT TOP OF RAM
	LDY MEMSIZ+1
	STA GRBTOP      ;SET BOTH POINTERS
	STA GRBPNT
	STA FRESPC
	STY GRBTOP+1
	STY GRBPNT+1
	STY FRESPC+1
;
; DO WHILE (GRBPNT <> FRETOP)
;
GLOOP	CPY FRETOP+1    ;END OF STRINGS ?
	BCC GRBEND
	BNE COL00
	CMP FRETOP
	BEQ GRBEND
	BCC GRBEND
;
; IF .A = #$FF THEN STRING IS GARBAGE
;
COL00	LDX HIGHDS      ;CHECK FLAG
	BMI COL00B
	LDA #$02
	JSR MOVTOP
COL00B	JSR SKIP2A
	LDY #$01
	LDA (GRBPNT),Y  ;GARBAGE ?
	CMP #$FF
	BNE COL01       ;NO A GOOD STRING
COL00A	DEY             ;BACK UP TO LENGTH
	LDA (GRBPNT),Y
	JSR MOVPNT      ;MOVE GRBPNT TO NEXT
	SEC
	ROR HIGHDS      ;SET FLAG FOR SQUASH
	BNE GLOOP       ;(JMP) GO GET MORE
;
; ELSE
;
COL01	JSR SETINX :POINT INDEX TO DESC
	LDX HIGHDS      ;IF ON DO SQUASH
	BPL COL03
	LSR HIGHDS      ;RESET FLAG
;
; MOVE A STRING OVER GARBAGE
;
COL02	LDY #$00        ;MOVE THE LINK BYTES
	LDA (GRBPNT),Y
	STA (GRBTOP),Y
	INY
	LDA (GRBPNT),Y
	STA (GRBTOP),Y
;
	DEY             ;GET LENGTH OF STRING
	LDA (INDEX1),Y
	TAX
	JSR MOVTOP      ;MOVE TOP POINTER
	STA FRESPC      ;SAVE IN FRESPC
	STY FRESPC+1
	TXA
	JSR MOVPNT      ;MOVE GRBPNT
	TXA             ;PUT LENGTH-1 IN .Y
	TAY
GLOP1	DEY
	LDA (GRBPNT),Y
	STA (GRBTOP),Y
	DEX
	BNE GLOP1
;
	LDY #$02        ;FIX THE DESCRIPTOR
COL02B	LDA GRBTOP-1,Y
	STA (INDEX1),Y
	DEY
	BNE COL02B
	LDA GRBPNT      ;CHECK POINTER
	LDY GRBPNT+1
	CPY FRETOP+1
	BCC GRBEND
	BNE COL02A
	CMP FRETOP
	BEQ GRBEND
	BCC GRBEND
COL02A	JSR SKIP2       ;SKIP LINK BYTES
	LDY #$01        ;IS IT GARBAGE ?
	LDA (GRBPNT),Y
	CMP #$FF
	BEQ COL00A
	JSR SETINX      ;RETURNS N SET
	BMI COL02
GRBEND	JMP ENDGRB
;
COL03	LDY #$00        ;SKIP OVER GOOD STRINGS
	LDA (INDEX1),Y
	TAX
	JSR MOVTOP
	STA FRESPC
	STY FRESPC+1
	TXA
	JSR MOVPNT
	JMP GLOOP
;
; DONE FIX FRETOP & FRESPC
;
ENDGRB	LDA FRESPC
	LDY FRESPC+1
	STA FRETOP
	STY FRETOP+1
	RTS
;
; SUBRUOTINES USED FOR GARBAGE COLLECTION
;
SKIP2	LDA #$02        ;SKIP POINTERS PAST
	JSR MOVTOP      ;THE LINK BYTES IN
SKIP2A	LDA #$02        ;THE STRING DATA
;
MOVPNT	EOR #255        ;COMP AND ADD
	SEC
	ADC GRBPNT
	LDY GRBPNT+1
	BCS MOV00
	DEY
MOV00	STA GRBPNT
	STY GRBPNT+1
	RTS
;
MOVTOP	EOR #255        ;COMP AND ADD
	SEC
	ADC GRBTOP
	LDY GRBTOP+1
	BCS MOV01
	DEY
MOV01	STA GRBTOP
	STY GRBTOP+1
	RTS
;
SETINX	LDY #$01        ;SET INDEX1 AS POINTER
SET00	LDA (GRBPNT),Y  ;TO THE LENGTH BYTE IN
	STA INDEX1,Y
	DEY
	BPL SET00
	RTS
.END
