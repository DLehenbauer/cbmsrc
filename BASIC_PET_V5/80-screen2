.PAG 'SCREEN2 4/28/80'
; ****** RESET SCROLL WINDOW TO FULL SIZE
;
SRESET	LDA #0
	TAX
	JSR TOPLF       ;SET TOP LEFT
	LDA #SCYMAX     ;# OF ROWS
	LDX #SCXMAX     ;# OF COLUMNS
;
;SET BOTTOM RIGHT SCROLL WINDOW
;
BOTRT	STA SCBOT
	STX SCRT
	RTS
;
;SET TOP LEFT SCROLL WINDOW
;
TOPLF	STA SCTOP
	STX SCLF
	RTS
.SKI 3
;*=BEGIN+$0202
; *** PRINT A CHAR ***
;
; ++++++ MUST START @ $E202 ++++++
;
PRT	PHA
	STA DATA        ;SAVE CHAR
	TXA             ;SAVE REGS.
	PHA
	TYA
	PHA
	JMP (VOUT)      ;GO THRU INDIRECT
PRT55	LDA #0          ;INDIRECT COMES HERE
	STA CRSW
	LDY ESCFLG      ;AN ESCAPE SEQ?
	BEQ NOESC       ;BRANCH IF NOT
	JSR SEQUEN      ;PROCESS ESCAPE SEQUENCE
	BCC GETOUT      ;BRANCH IF VALID SEQUENCE
NOESC	LDY PNTR        ;COLUMN IN Y
	LDA DATA        ;GET THE CHAR TO PRINT
	AND #$7F
	CMP #$1B        ;AN ESCAPE ?
	BNE PRT560      ;NO
	LDA #$FF        ;SET ESCAPE FLAG
	STA ESCFLG
	JMP LOOP2       ;AND RETURN
PRT560	LDA DATA        ;A SHIFTED CHAR ?
	BPL *+5         ;NO
	JMP NXTX        ;YES
	CMP #$D         ;A NORMAL RETURN
	BNE NJT1        ;NO
	JMP NXT1        ;YES
NJT1	CMP #$20        ;A CONTROL KEY ?
	BCC NTCN        ;YES
	AND #$3F        ;NO - MAKE A SCREEN CHAR
	JSR QTSWC       ;TEST FOR QUOTE
	JMP NXT3        ;PUT ON SCREEN
; *** CONTROL KEYS ***
NTCN	LDX INSRT       ;IN INSERT MODE ?
	BEQ CNC3X       ;NO
	JMP NC3         ;YES - GO PRT IN RVS
CNC3X	CMP #$14        ;A DELETE KEY ?
	BNE NTCN1       ;NO
	JSR DELEET      ;DELETE THIS CHARACTER
GETOUT	JMP LOOP2
.SKI
NTCN1	LDX QTSW        ;IN QUOTES ?
	BEQ NC3W        ;NO
CNC3	JMP NC3         ;YES - PRT IN RVS
NC3W	CMP #$12        ;A RVS KEY ?
	BNE NC1         ;NO
	STA RVS         ;YES - SET FLAG
NC1	CMP #$13        ;A HOME KEY ?
	BNE NC2         ;NO
	LDA FHOME       ;YES - IS THIS THE SECOND
	BPL NC100       ;NO
	JSR SRESET      ;YES - RESET SCROLL WINDOW
	CLC             ;MAKE FLAG PLUS
NC100	ROR FHOME       ;CHANGE SIGN
	JSR NXTD        ;MOVE TO TOP LEFT
	JMP LOPII       ;EXIT
NC2	CMP #$F         ;SHALL I SWITCH THE RVS/ESCAPE FUNCTION
	BNE NCXX        ;BRANCH IF NOT
	LDA #$FF
	EOR RVSESC
	STA RVSESC
	JMP LOOP2
NCXX	CMP #$1D        ;A CRSR RIGHT KEY ?
	BNE NCX2        ;NO
	JSR NXTCHR      ;RIGHT 1 LOGICAL CHARACTER
	BCC JPL3        ;IF SCROLL ENABLED THEN RETURN
	JSR NXTD        ;ELSE RESET TO HOME POS
	BNE JPL3        ;AND EXIT
NCX2	CMP #$11        ;A CRSR DOWN ?
	BNE TABCHK      ;NO
	LSR LSXP
JPL0	JSR NXLN
	BCC JPL3        ;BRANCH IF SCROLL ENABLED
	LDA SCTOP       ;WRAP TO TOP OF SCREEN
	STA TBLX
	JSR STUPT       ;POINT TO TOP LINE
JPL3	JMP LOOP2
;
;TAB FUNCTION
TABCHK	CMP #$09        ;TEST FOR TAB
	BNE JPL3        ;NO - CHECK ERASE TO
	JSR GETTAB      ;TAB SET UP
TAB1	LDY TABPOS
	INC TABPOS      ;GO TO NEXT POS
	CPY SCRT        ;PAST EOL?
	BCC TAB2        ;NO => CONT
	LDA SCRT
	STA PNTR        ;SET POS TO EOL
	DEC TABPOS      ;RESET TABPOS
	BNE JPL3        ;RE-ENTER
TAB2	ASL BITMSK      ;ADJUST BIT MASK
	BNE TAB3        ;IF<> 0 => CONT
	INX             ;ELSE GET NEW TAB BYTE
	CPX #10         ;END OF BUFFER?
	BEQ JPL3        ;YES => IGNOR IT
	LDA #1          ;SET MASK
	STA BITMSK
TAB3	LDA TAB,X
	AND BITMSK      ;CHK FOR TAB SET
	BEQ TAB1        ;NOT SET => TRY AGAIN
	INY             ;TAB SET => SET PNTR
	STY PNTR
.SKIP 3
; *** SHIFTED KEYS ***
;
NXTX	AND #$7F        ;MASK SHIFT
	CMP #$7F        ;A PI
	BNE NXTX1       ;NO
	LDA #$5E        ;YES - SUB CORRECT CHAR
NXTX1	CMP #$20        ;SHIFTED CONTROL KEYS ?
	BCC *+5         ;YES
	JMP NXT33       ;NO - GO DISPLAY CHAR
	CMP #$D         ;A SHIFTED RETURN ?
	BNE UP5         ;NO
	JMP NXT1        ;YES - DO A RETURN
UP5	LDX QTSW        ;IN QUOTES ?
	BNE UP6         ;YES - PRT IN RVS
	CMP #$14        ;AN INSERT
	BNE UP9         ;NO
	JSR INSERT      ;MAKE ROOM FOR A CHAR TO INSERT
	BNE JPL4        ;ALWAYS
UP9	LDX INSRT       ;INSERTS IN QUOTE MODE ?
	BEQ UP2         ;NO
UP6	ORA #$40        ;SHOW AS RVS
	JMP NC3
UP2	CMP #$11        ;A CRSR UP ?
	BNE NXT2        ;NO
	LDX SCTOP       ;AT TOP OF WINDOW ?
	CPX TBLX
	BCS JPL4        ;YES - NO UP
	DEC TBLX        ;NO - DO IT
	JSR STUPT       ;FIX PTR
	BNE JPL4        ;ALWAYS
NXT2	CMP #$12        ;A RVS OFF ?
	BNE NXT6        ;NO
	LDA #0          ;YES - CLEAR FLAG
	STA RVS
NXT6	CMP #$1D        ;A CRSR LEFT ?
	BNE NXT61       ;NO
	LDY SCLF        ;TEST FOR WRAP UP
	CPY PNTR
	BCC NXT8        ;NO WRAP UP TO NEXT LINE
	JSR BKLN        ;FIX WRAP
	BNE JPL4        ;ALWAYS
NXT8	DEC PNTR        ;BACK UP
	BPL JPL4        ;ALWAYS
NXT61	CMP #$13        ;A CLR SCREEN ?
	BNE TABSET      ;NO
	JSR CLSR
	BNE JPL4        ;ALWAYS EXIT
;
TABSET	CMP #$09        ;SHIFT TAB?(TOGGLE TAB)
	BNE JPL4        ;NO
	JSR GETTAB      ;YES => DO TAB SET-UP
	LDA TAB,X       ;GET TAB STOR BYT
	EOR BITMSK      ;TOGGLE TAB BIT AT CURSOR POS
	STA TAB,X
JPL4	JMP LOOP2
;
.SKIP 3
NXLN
	LDX TBLX
	CPX SCBOT       ;OF THE BOTTOM OF WINDOW ?
	BCC NXLN1       ;NO
	LDA SCRDIS      ;WHAT IF SCROLLING IS DISABLED?
	BEQ DOSCRL      ;BRANCH IF SCROLL IS ENABLED
	INC TBLX        ;DO THIS ONLY WHEN SCROLL DISABLED
	SEC             ;INDICATE SCROLL DISABLED WE'RE ATOPSCREEN
	RTS
.SKI
DOSCRL	JSR BITSUP      ;YES - SCROLL
	CLC             ;INDICATE WE DID SCROLL
NXLN1	INC TBLX
	BNE NOWHOP
	INC SEDT1       ;WHOOPS WENT TOO FAR
NOWHOP
	JMP STUPT
NXT1	JSR FNDEND      ;FIND THE END OF THE CURRENT LINE
	BCS UNNEXT      ;BRANCH IF PAST PAST BOTTOM SCROLL'S OFF
	CPY SCLF        ;IS THE END AT LEFT MARGIN?
	BEQ NXCLR       ;BRANCH IF SO
	LDY SCLF        ;ELSE POINT TO START OF NEXT LINE
	STY PNTR
	JSR NXLN        ;SET UP NEXT LINE
	BCC NXCLR       ;BRANCH IF SCROLL'S ON AND NOT BOTTOM
UNNEXT	JSR NXTD        ;SCROLL'S OFF SO BACK ATTOP LEFT
NXCLR	JSR STUPT       ;PUT CUSOR WHERE IT BELONGS
	TXA             ;MAKE SURE THIS IS A NON-CONTINUED LINE
	JSR CLRBIT      ;CLEAR THE BIT FOR THIS LINE
	LDA #0
	STA INSRT       ;CLEAR INSERTS
	STA RVS         ;CLEAR RVS FIELD
	STA QTSW        ;CLEAR QUOTE MODE
	JMP LOOP2
.SKIP 5
; **** SCROLL ROUTINES ****
;
.SKIP 2
; *** SCROLL DOWN
SCRDWN	LDX SCBOT       ;SCROLL DOWN, START BOTTOM
	INX
SCD10	DEX
	JSR SCRLY       ;SET PNT AT TO LINE
	CPX SCTOP       ;DONE
	BEQ SCR40       ;YES
	LDA LDTB2-1,X   ;SET SAL FROM PTR
	STA SAL
	LDA LDTB1-1,X
	STA SAL+1
SCD20	INY             ;MOVE LINES
	LDA (SAL),Y
	STA (PNT),Y
	CPY SCRT        ;DONE ?
	BCC SCD20       ;NO
	BCS SCD10       ;ALWAYS
.SKIP 2
; *** SCROLL UP
SCRUP	LDX SCTOP       ;START SCROLL AT THE TOP
	DEX
SCR10	INX
	JSR SCRLY       ;SET PNT TO BEGIN OF LINE
	CPX SCBOT       ;AT LAST LINE ?
	BCS SCR41       ;YES
	LDA LDTB2+1,X   ;SET FROM PTR
	STA SAL
	LDA LDTB1+1,X
	STA SAL+1
SCR20	INY
	LDA (SAL),Y     ;MOVE A LINE
	STA (PNT),Y
	CPY SCRT        ;DONE ?
	BCC SCR20       ;NO
	BCS SCR10       ;ALWAYS
SCR40	JSR CLRLN       ;CLEAR CURRENT TOP LINE
	JSR SCROLD      ;TELL ANY EDITOR WE HAVE A BLANK LINE
	JMP SLOTST      ;GO AROUND
SCR41	JSR CLRLN       ;CLEAR THE CURRENT BOTTOM LINE
	JSR SCROLU      ;ANOUNCE BLANK LINE AT TOP OF SCREEN
SLOTST
	JSR STUPT       ;MAKE SURE IT LOOKS RIGHT
	LDA PIAK        ;TEST KEYBOARD
	CMP #$FE        ;A SLOW SCROLL
	BNE SCR80       ;NO
	LDY #0
SCR60	NOP             ;YES - WASTE TIME
	DEX
	BNE SCR60
	DEY
	BNE SCR60
SCR70	LDY #0          ;EMPTY KEY BUF
	STY NDX
SCR75	RTS
SCR80	CMP #$DF        ;A ":" KEY FOR STOP
	BNE SCR75       ;NO
SCR90	LDA PIAK        ;ANY OTHER KEY TO GO ON
	CMP #$DF
	BEQ SCR90
	CMP #$FF
	BEQ SCR90
	BNE SCR70       ;ALWAYS
.END
