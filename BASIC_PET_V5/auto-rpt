.PAG 'AUTO-RPT 4/30/80'
;*=BEGIN+$0442
;
; ++++++ MUST START @ $E442 ++++++
;
PULS	PHA             ;IRQ HANDLER
	TXA             ;SAVE REGS.
	PHA
	TYA
	PHA
	TSX
	LDA $104,X
	AND #$10        ;A BREAK ?
	BEQ PULS1       ;NO - THEN DI IRQ
	JMP (CBINV)
PULS1	JMP (CINV)
;
; ++++++ MUST START @ $E455 ++++++
;
KEY	JSR $FFEA       ;UPDATE JIFFY CLOCK
	LDA BLNSW       ;BLINKING CRSR ?
	BNE KEY4        ;NO
	DEC BLNCT       ;TIME TO BLINK ?
	BNE KEY4        ;NO
	LDA #20         ;RESET BLINK COUNTER
	BIT RPTFLG      ;REPEAT KEY
	BPL REPDO       ;NO
	LDA #2          ;YES - FLASH CRSR
REPDO	STA BLNCT
	LDY PNTR
	LSR BLNON
	LDA (PNT),Y     ;GRAB CHAR ON SCREEN
	BCS KEY5        ;SKIP IF NOT ORIGINAL
	INC BLNON       ;SET FLAG GOT ORIGINAL
	STA GDBLN
KEY5	EOR #$80        ;BLINK CRSR
	STA (PNT),Y
KEY4	LDY #0
	LDA PIAL        ;TEST CASSETTE SWITCHS
	AND #$F0
	STA PIAL
	LDA PIAL
	ASL A
	ASL A
	ASL A
	BPL KEY3
	STY CAS1
	LDA PIAS        ;CASS #1 MOTOR OFF
	ORA #$08
	BNE KL24
KEY3	LDA CAS1
	BNE KL2
	LDA PIAS        ;CASS #1 MOTOR ON
	AND #$F7
KL24	STA PIAS
KL2	BCC KL23
	STY CAS2
	LDA PIA         ;CASS #2 MOTOR OFF
	ORA #$10
	BNE KL25
KL23	LDA CAS2
	BNE KL26
	LDA PIA         ;CASS #2 MOTOR ON
	AND #$EF
KL25	STA PIA
.SKI 2
KL26	JSR SCNKEY      ;SCAN KEYBOARD AND FILL BUFFER
	JMP PREND       ;EXIT FROM IRQ
.SKI 3
; ****** GENERAL KEYBOARD SCAN ******
;
SCNKEY	LDY #$FF
	STY SFDX        ;NULL NEW GET INDEX
	INY             ;Y=0
	STY SFST        ;CLEAR SHIFT FLAG
	LDX #80         ;SCAN 80 KEYS
SCN20	LDY #8          ;8 ROW KEYBOARD
	LDA PIAK
	CMP PIAK        ;DEBOUNCE KEYBOARD
	BNE SCN20
SCN30	LSR A           ;LOOK FOR KEY DOWN
	BCS CKIT        ;NONE
	PHA
	LDA CHARB-1,X   ;GET BUSINESS MATRIX
	BNE SPCK2;REAL KEY
	LDA #1          ;SET SHIFT FLAG
	STA SFST
	BNE CKUT        ;SKIP TO CKUT
SPCK2	CMP #$FF        ;A NULL KEY ?
	BEQ CKUT        ;YES - IGNORE IT
	STA SFDX        ;NO - SAVE NEW KEY
CKUT	PLA
CKIT	DEX
	BEQ CKIT1
	DEY
	BNE SCN30
	INC PIAL        ;NEXT COLUMN ON KEYBOARD
	BNE SCN20       ;ALWAYS BRANCH
CKIT1	LDA SFDX
	CMP LSTX        ;SAME AS PREV CHAR?
	BEQ RPT10       ;YES
	LDX #$10        ;NO - RESET DELAY BEFORE REPEAT
	STX DELAY
	BNE CKIT2       ;ALWAYS
RPT10
	CMP #$FF        ;NO KEYS?
	BEQ SCNRTS      ;BRANCH IF NO KEYS
	BIT RPTFLG      ;ALWAYS REPEAT?
	BVS RPT20       ;BRANCH IF SO
	CMP #$14        ;AN INSERT/DELETE KEY?
	BEQ RPT20       ;BRANCH IF SO
	CMP #$20        ;SPACE KEY?
	BEQ RPT20       ;BRANCH IF SO
	CMP #$1D        ;CURSOR LEFT OR RIGHT?
	BEQ RPT20
	CMP #$11        ;CURSOR UP OR DOWN?
	BNE SCNRTS      ;BRANCH IF NOT
RPT20	LDX DELAY       ;TIME TO REPEAT ?
	BEQ RPT40       ;YES
	DEC DELAY
	BNE SCNRTS
RPT40	DEC REPCNT      ;TIME FOR NEXT REPEAT ?
	BNE SCNRTS      ;NO
	LDX #4          ;YES - RESET CTR
	STX REPCNT
	LDX NDX         ;NO REPEAT IF QUEUE FULL
	DEX
	BPL SCNRTS
CKIT2	STA LSTX
CKIT3	CMP #$FF        ;A NULL KEY OR NO KEY ?
	BEQ SCNRTS      ;YES - IGNORE IT
CKIT4	TAX             ;SET MINUS FLAG
	PHP
	AND #$7F
	PLP
	BMI KN1
	LSR SFST        ;A SKIFT KEY ?
	BCC KN1         ;NO - SKIP
KN2	ORA #$80
KN1	LDX NDX
	CPX XMAX        ;IRQ BUFFER FULL ?
	BCS SCNRTS      ;YES - NO MORE INSERT
	STA KEYD,X      ;NO - PUT CHAR IN
	INX
	STX NDX
SCNRTS	RTS
.SKI 4
;
;TAB SET-UP (TAB POSITIONER)
GETTAB	LDA PNTR        ;FIND CURSOR POS
	AND #$F8        ;ERASE LOWER BITS
	STA TABPOS
	LSR A           ;DIVIDE BY 8
	LSR A
	LSR A
	TAX             ;LOAD INDEX
	LDA #1          ;SET BIT MASK
	STA BITMSK
	LDY PNTR
TABOK	CPY TABPOS      ;IS TAB BIT AT CURSOR POS?
	BEQ RTSTAB      ;YES => RET
	ASL BITMSK      ;ELSE ROTATE BIT MASK
	INC TABPOS      ;GOTO NXT TABPOS
	JMP TABOK       ;TRY AGAIN
RTSTAB	RTS
.SKI 3
; ****** MORE OF PRT ROUTINE ******
;
SCTUP	CMP #$19        ;A SCROLL UP ?
	BNE TOPSET      ;NO
	JSR SCRUP       ;YES - SCROLL SCREEN UP
	JMP SCTD10
TOPSET	CMP #$0F        ;SET TOP LEFT SCROLL WINDOW ?
	BNE TEXX        ;NO
	LDA TBLX        ;YES - GET PRESENT TOP
	STA SCTOP       ;SET TOP OF WINDOW
	LDA PNTR        ;GET LEFT SIDE
	STA SCLF        ;SET WINDOW LEFT
JPL8	JMP LOOP2
TEXX	CMP #$0E        ;SET TEXT MODE ?
	BNE PBELL       ;NO
	JSR TXCRT       ;SET FOR TEXT MODE
	BMI JPL8        ;ALWAYS
PBELL	CMP #$07        ;A BELL ?
	BNE JPL8        ;NO
	JSR BELL        ;RING BELL
	BEQ JPL8        ;ALWAYS
ILINE	CMP #$15        ;INSERT A LINE ?
	BNE SCTDWN      ;NO
	LDA SCTOP       ;SAVE SCREEN TOP
	PHA
	LDA TBLX        ;SET TOP TO HERE
	STA SCTOP
	JSR SCRDWN      ;SCROLL DOWN
ILN20	PLA
	STA SCTOP       ;RESTORE SCREEN TOP
	JSR STU10       ;FIX PNT,MOVE FAR LEFT
	BNE JPL9        ;ALWAYS
.SKI 3
SCTDWN	CMP #$19        ;A SCROLL DOWN ?
	BNE BOTSET      ;NO
	JSR SCRDWN      ;YES - SCROLL SCREEN DOWN
SCTD10	JSR STUPT       ;SET PTRS
	BNE JPL9        ;ALWAYS
BOTSET	CMP #$0F        ;A SET OF BOTTOM RIGHT
	BNE GRAPH       ;NO
	LDA TBLX        ;YES - SET SCROLL WINDOW BOTTOM
	STA SCBOT
	LDA PNTR        ;SET RIGHT SIDE
	STA SCRT
JPL9	JMP LOOP2
GRAPH	CMP #$0E        ;SET GRAPHIC MODE
	BNE PBELL       ;NO
	JSR GRCRT       ;SET CRT FOR 8 SCANS TO A CHAR
	BMI JPL9        ;ALWAYS
.SKI 3
;* =BEGIN+$600
; ++++++ MUST START @ $E600 ++++++
;
PREND	PLA             ;RESTORE REGS.
	TAY
	PLA
	TAX
	PLA
	RTI
.SKI 3
DSPP	LDY PNTR
	STA (PNT),Y
	LDA #2
	STA BLNCT       ;FORCE CRSR TO BLINK
	RTS
.SKI 3
; ****** I/O AND VARABLE SETUP ******
;
EXTRA0	LDA #$7F        ;EXTRA I/O
	STA IER
	LDX #CAS2-TIME
	LDA #0
	STA FHOME       ;CLEAR FOR FIRST HOME
	STA RPTFLG      ;ALLOW REPEAT CURSOR
	STA INSFLG      ;TURN OFF AUTO INSERT MODE
PX1	STA TIME,X      ;ZERO ALL VARABLES
	DEX
	BPL PX1
	LDA #<KEY       ;SET IRQ VECTOR
	STA CINV
	LDA #>KEY
	STA CINV+1
	LDA #9          ;SET MAX IRQ KEY BUF TO 9
	STA XMAX
	LDA #3          ;OUTPUT DEVICE SCREEN
	STA DFLTO
	LDA #$F         ;KEYBOARD SCANER
	STA PIAL
	ASL A
	STA PIA
	STA P2DB
	STX IEEO
	STX TIH
	LDA #$3D        ;ENABLE 60HZ IRQ
	STA PIAS
	BIT PIAK
	LDA #$3C
	STA IEEIS
	STA IEEOS
	STA PIAL1
	STX IEEO
	LDA #$E
	STA BLNCT
	STA BLNSW
	STA DELAY       ;INIT REPEAT DELAY
	STA REPCNT
	STA IER
	JSR SRESET      ;RESET SCROLL WINDOW
CLRTAB	LDX #9          ;CLEAR TAB ENTRANCE
	LDA #0
CLRALL	STA TAB,X       ;CLR ALL TAB KEYS
	DEX
	BPL CLRALL
	LDX #3          ;CLEAR LINE WRAP BIT MAP
BIT000	STA BITABL,X
	DEX
	BPL BIT000
	STA SCRDIS      ;ENABLE SCROLLING
	LDA #<LOP55     ;SET INDIRECT FOR INPUT
	LDX #>LOP55
	STA VINP
	STX VINP+1
	LDA #<PRT55     ;SET INDIRECT FOR OUTPUT
	LDX #>PRT55
	STA VOUT
	STX VOUT+1
	LDA #<CLP7      ;SET UP SCROLL INDIRECTS TO RTS
	LDX #>CLP7
	STA UPINDR
	STX UPINDR+1
	STA DNINDR
	STX DNINDR+1
	LDA #$10        ;ENABLE BELL SOUND
	STA FBEL
BEL4	JSR BEL2        ;SOUND 4 BELLS
	BEQ BEL2        ;ALWAYS
.SKI 4
PATCH2
; *** BELL ***
;
BEL2
BELL	RTS
.END
