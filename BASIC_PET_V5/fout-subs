.PAG 'SEXTND'
;***************************************
;
;  SIGN EXTEND THE FPA BCD EXPONENT
;
;**************************************
.SKI
SEXTND	LDA FACEXP      ;GET BCD EXPONENT
	SEC
	BMI KEEPC
	CLC
KEEPC
	ROR A
	STA EXTEND
	RTS
;*********************************
;
;SUBROUTINE FMTBUF
;
;*********************************
FMTBUF
	LDA FACLSD,X    ;GET A BYTE FROM FAC
	AND #$F0        ;CLEAR LOW ORDER NIBBLE
	LSR A           ;SHIFT HIGH ORDER NIBBLE TO LO
	LSR A
	LSR A
	LSR A
	JSR PUTBUF      ;CONVERT TO ASCII AND PUT IN BUFFER
	JSR TSTCOM      ;TEST TO SEE IF WE SHOULD PUT IN A COMMA
	LDA FACLSD,X    ;ELSE GET BYTE FROM FAC
	AND #$0F        ;CLEAR HIGH ORDER NIBBLE
	JSR PUTBUF      ;CONVERT TO ASCII AND PUT IN BUFFER
	JSR TSTCOM      ;TST TO SEE IF WEE SHOULD PUT A
;COMMA HERE
	DEX             ;ELSE DECREMENT INDEX INTO FAC
	JMP FMTBUF      ;AND GO DO ANOTHER BYTE
DECPNT	RTS             ;RETURN
.PAGE
EXPADJ
	LDA #0          ;FLAG EXPONENT AS POSITIVE
	STA EXPSGN      ;PUT FLAG HERE
	STA SGNFLG      ;ASSUME PLUS
	LSR FACEXP      ;DIVIDE EXPONENT BY 2
	BCC PLUSNG      ;BRANCH IF REALLY IS PLUS
	LDA #$FF        ;ELSE FLAG IT AS NEGITIVE
	STA SGNFLG      ;WITH THIS BYTE
PLUSNG	BIT FACEXP      ;TEST SIGN BIT OF EXPOONENT
	BVC PLUSEX      ;BRANCH IF EXPONENT >0
	LDA #$80        ;LARGEST POSSIBLE NEG NO.
	SEC             ;IGNORE CARRY
	SBC FACEXP      ;WRAP EXPONENTT INTO POSITIVE SIDE
	STA FACEXP      ;PUT POSITIVE EXPONENT BACK
	LDA #$FF        ;GET A -1 TO FLAG MINUS EXPONENT
	STA EXPSGN      ;FLAG EXPONENT AS MINUS
PLUSEX	RTS             ;RETURN
.SKI 2
PUTBUF	DEC LCOUNT
	BMI CHECKR      ;BRANCH IFF NO MORE ON LEFT SIDE
	ORA #$30        ;MAKE IT ASCII
	STA (INDEX1)Y   ;PUT IT IN OUTPUT BUFFER
	INY
	RTS
.SKI
CHECKR	PHA             ;SAVE THE DIGIT
	LDA RCOUNT      ;IS THERE A RIGHT SIDE TO PRINT
	BNE ROK         ;BRANCH IF SO
	PLA             ;GET RID OF THIS CHARACTER?
	PLA             ;AND RETURN ADDRESS
	PLA
	RTS
.SKI
ROK	STA LCOUNT      ;RESET ARGUMENTS FOR RIGHT SIDE
	LDA #0
	STA UFLAGS+ISCB ;TURN OFF COMMAS
	STA RCOUNT      ;DONT DO ANOTHER RIGHT SIDE
	LDA TENTHS      ;GET FRACTION SEPARATOR
	STA (INDEX1)Y
	INY
	DEC LCOUNT
	PLA             ;GET BCD DIGIT TO CONVERT
	JMP PUTBUF      ;PUT IT AWAY
.SKI 2
TSTCOM
	LDA UFLAGS+ISCB ;TEST TO SEE IF HE WANTS COMMAS
	BEQ NOCOMA      ;BRANCH IF COMMAS NOT REQUESTED
	LDA LCOUNT      ;ELSE CHECK CURRENT DIGIT #
	JSR DIV3        ;BY DIVIDING BY 3
	BCC NOCOMA      ;BRANCH IF REMAINDER <=1
	LDA THOUSD      ;ELSE PUT IN COMMA IN OUTPUT BUFFER
	STA (INDEX1),Y
	INY             ;BUMP INDEX INTO OUTPUT BUFFER
NOCOMA
	RTS             ;RETURN
.SKI 2
DIV3
	STX DPTFLG      ;SAVE INPUT NUMBER INDEX HERE
	LDA LCOUNT      ;DIVIDE LCOUNT BY 3
DIV2ND	LDX #0          ;SET QUOTIENT TO 1
	SEC             ;IGNORE THE CARRY
DIVUP	SBC #3          ;LCOUNT-3
	BEQ NODIV       ;BRANCH WHEN NO REMAINDER
	BCC DIVBYE      ;BRANCH WHEN .A<=0
	INX             ;ELSE INCREMENT QUOTIENT
	BNE DIVUP       ;IFF ITS NOT EXACTLY ZERO GO SUBTRACT
NODIV	INX
	SEC             ;ELSE SET CARRY BIT (THERE IS A REMAINDER)
DIVBYE
	TXA             ;PUT RESULT IN ACCUMULATOR
	LDX DPTFLG      ;RECOVER .X
	RTS             ;RETURN
PADFIL
LELOOP	DEX             ;DECREMENT LOOP COUNTER
	BEQ LEBYE       ;BRANCH WHEN DONE
	STA (INDEX1),Y  ;PUT THE FILL CHARRACTER
	INY             ;BUMP OUTPUT BUFFER INDEX
	BNE LELOOP      ;BRANC BACK TO TOP
.SKI
LEBYE	RTS             ;RETURN
;***********************************
; SUBROUTINE LSTSIG
;
; SEARCHES FAC FOR THE LEAST SIGNIFICANT DIGIT
;
;***********************************
LSTSIG
	LDX #9          ;BYTE COUNT FOR SEARCH LOOP
	LDY #0          ;INDEX INTO FAC
LSD	LDA FACLSD+2,Y  ;GETA BYTE FROM FAC
	BNE LSD1        ;WHEN NON-ZERO IT IS THE LSD
	INY             ;BUMP INDEX INTO FAC
	DEX             ;DECREMENT LOOP COUNTER
	BNE LSD         ;BRANCH BACK UNTIL DONE
;
; WHEN ALL DIGITS ARE ZERO WE ARRIVE HERE
;
	RTS             ;RETURN TO PRINT
.SKI
LSD1
	STX LASTSG      ;SAVE INDEX OF LAST SIGNIFICANT DIGIT
	ASL LASTSG      ;CONVERT FROM BYTE TO NIBBLE
	AND #$0F        ;CHECK IF NON-0 NIBBLE WAS HI OR LO
	BNE GOTIT       ;BRANCH IF IT WAS THE LO NIBBLE
	DEC LASTSG      ;ELSE BACK INDEX UP ONE
GOTIT	RTS
.END
