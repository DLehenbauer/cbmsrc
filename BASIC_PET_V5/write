.PAG 'WRITE'
;***********************************
;
;    W R I T E
;
; ROUTINE NAME:   WRITE
;
; PURPOSE: TO ENABLE THE BASIC PROGRAMER TO STORE DATA ON DISK IN
; INTERNAL MACHINE REPRESENTATION
;
;PARAMETERS: IT EXPECTS TXTPTR TO BE POINTING AT THE FIRST
; NON-BLANK CHARACTER.  THIS CHARACTER MUST BE A "#".
;
; ROUTINES USED: CHRGOT,SYNCHR,GETBYT,CHKOUT,FRMEVL,BSOUT
;
; AUTHOR: JACK MARTINELLI
;
; WRITEN: DEC 2,1979
;
; SOURCE LANGUAGE: 6502 ASSEMBLY
;
; OBJECT MODULE NAME:WRITE.OBJ
;
; LIBRARY -
;
;*********************************
;
; IF LOCICAL UNIT EXPRESSION IS OK
;    IF NOT POINTING AT TERMINATOR
;        WHILE NOT POINTING AT TERMINATOR
;          EVALUATE ARITHMATIC EXPRESSION
;          WRITE DATA TYPE BYTE TO DISK
;          IF DATA TYPE IS NUMERIC
;             PUT TYPE'S LENGTH IN .X
;             PUT ADDRESS OF FAC IN INDEX1
;          ELSE (* ITS STRING *)
;             GET STRING LENGTH PUT IT IN .X
;             SEND STRING LENGTH TO DISK
;             PUT POINTER TO STRING IN INDEX1
;          END
;          IF LENGTH IS NOT ZERO
;             TRANSFER .X BYTES FROM (INDEX1) TO DISK
;          END
;       END (* OF WHILE *)
;    ELSE SYNTAX ERROR
; ELSE SYNTAX ERROR
; RETURN
;
;*********************************
;
WRITE	JSR CHRGOT      ;FIND FIRST NON-BLANK CHARACTER
	LDA #'#         ;SET UP ARGUMENT TO SYNCHR
	JSR SYNCHR      ;CHECK FOR "#" IF ITS OK
;POINT TO LOGICAL UNIT EXPRESSION
	JSR GETBYT      ;EVALUATE L.U. EXPRESSION
;IF 0<L.U.<255 IS FALSE GENERATE ERROR
	JSR OLDCLR      ;CLEAR DISK STATUS JUST IN CASE
	JSR CHKOUT      ;ELSE CHECK FOR FILE OPEN
;GENERATE ERROR IF NOT
;OTHERWISE ESTABLISH I/O CHANNEL
	STX CHANNL      ;ESTABLISH AN ACTIVE L.U.
OKHERE	JSR CHKCOM      ;NEXT CHARACTER MUST BE A COMMA
;GENERATE AN ERROR IF ITS NOT
	JSR FRMEVL      ;EVALUATE USER'S EXPRESSION
;
; WRITE DATA TYPE BYTE TO DISK
;
	LDA TARGET      ;GET THE DATA TYPE BYTE
	JSR BSOUT       ;SEND IT TO THE DISK
	LDA TARGET      ;GET THE TYPE FOR SIGN TEST
	JSR DCONF       ;CONVERT TO TARGET TYPE
	TAY             ;PUT TYPE IN .Y FOR INDEXING
	BNE NOTFLT      ;BRANCH IF NOT FLOATING TYPE
	LDA FACSGN      ;GET SIGN BYTE OF FAC
	AND #$80        ;CLEAR ALL BITS BUT BIT 7
	ORA FACHO
	STA FACHO
NOTFLT	LDA #<FAC       ;DATA IS NUMERIC SO POINT TO FAC
	STA INDEX1      ;PUT HI ORDER ADDRESS
	LDA #>FAC       ;GET LO ORDER ADDRESS
	STA INDEX1+1    ;PUT LO ORDER ADDRESS
	LDX TYPLEN,Y
	BPL SNDSTR      ;GO TRANSFER STRING TO DISK
;
; DATA TYPE IS STRING -- WRITE STRING LENGTH
;
STRTYP
	JSR FRESTR      ;FREE UP TEMPORARY STORAGE
;USED BY FRMEVL  GET POINTER TO STRING
	JSR BSOUT       ;SEND LENGTH BYTE TO THE DISK.
	TAX             ;PUT NUMBER OF BYTES IN .X FOR TRANSFER
;
; SEND THE DATA TO DISK
;
SNDSTR	TXA             ;CHECK FOR A ZERO LENGTH
	BEQ CONTIN
	LDY #0          ;INITIALIZE FROM INDEX
STLOOP	LDA (INDEX1)Y   ;GET A DATA BYTE
	JSR BSOUT       ;SEND IT TO THE DISK
	INY             ;BUMP DATA INDEX
	DEX             ;DECREMENT LOOP COUNT
	BNE STLOOP      ;GO BACK IFF MORE DATA
;
CONTIN	JSR CHRGOT      ;CHECK FOR A TERMINATOR
	BNE OKHERE
	JMP IODONE      ;CLEAN UP IO AND RETURN
;
.END
