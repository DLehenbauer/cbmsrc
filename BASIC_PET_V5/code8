.PAG 'CODE8'
DATBK1	JSR CHRGET
	BIT VALTYP
	BPL NUMINS
	BIT INPFLG
	BVC SETQUT
	INX
	STX TXTPTR
SETQU1	LDA #0
	STA CHARAC
	BEQ RESETC
SETQUT	STA CHARAC
	BIT LINEIN      ;LINE INPUT
	BMI SETQU1      ;YES SO ONLY C/R TERMINATES
	CMP #34
	BEQ NOWGET
	LDA #':
	STA CHARAC
	LDA #',
RESETC	CLC
NOWGET	STA ENDCHR
	LDA TXTPTR
	LDY TXTPTR+1
	ADC #0
	BCC NOWGE1
	INY
NOWGE1	JSR STRLT2
	JSR ST2TXT
	JSR INPCOM
	JMP STRDN2
NUMINS	JSR FIN
	LDA INTFLG
	JSR QINTGR
STRDN2	JSR CHRGOT
	BEQ TRMOK
	CMP #44
	BEQ *+5
	JMP TRMNOK
TRMOK	LDA #$F0
	STA TARGET
	LDA TXTPTR
	LDY TXTPTR+1
	STA INPPTR
	STY INPPTR+1
	LDA VARTXT
	LDY VARTXT+1
	STA TXTPTR
	STY TXTPTR+1
	JSR CHRGOT
	BEQ VAREND
	JSR CHKCOM
	JMP INLOOP
DATLOP	JSR DATAN
	INY
	TAX
	BNE NOWLIN
	LDX #ERROD
	INY
	LDA (TXTPTR)Y
	BEQ ERRGO5
	INY
	LDA (TXTPTR)Y
	STA DATLIN
	INY
	LDA (TXTPTR)Y
	INY
	STA DATLIN+1
NOWLIN	JSR ADDON       ;FIX 10/16/79
	JSR CHRGOT
	CMP #DATATK
	BNE DATLOP
	JMP DATBK1
VAREND	LDA INPPTR
	LDY INPPTR+1
	LDX INPFLG
	BPL VARY0
	JMP RESFIN
VARY0	LDY #0
	LDA (INPPTR)Y
	BEQ INPRTS
	LDA CHANNL
	BNE INPRTS
	LDA #<EXIGNT
	LDY #>EXIGNT
	JMP STROUT
INPRTS	RTS
;-------   NEXT--------
NEXT	BNE GETFOR
	LDX #$F0        ;!SET UNDEFINED
	LDY #0
	BEQ STXFOR
GETFOR	JSR PTRGET
STXFOR	STA FORPNT
	STY FORPNT+1
	STX FORTYP      ;!SET TYPE LEFT SIDE
	STX TARGET      ;!ALSO SET DESIRED RESULT HERE
	JSR FNDFOR
	BEQ HAVFOR
	LDX #ERRNF
ERRGO5	JMP ERROR       ;!
HAVFOR	TXS
	LDA $104,X      ;GET TYPE FROM STACK
	STA FORTYP
	STA TARGET
	TXA
	CLC
	ADC #5          ;!GET PAST BOTTOM STUF
	TAY             ;!SAVE IT-PTR TO STEP
	TAX
	LDA $100,X      ;!GET TYPE CODE
	JSR ADDSTK      ;! MOVE OVER IT
	TAX
	LDA $100,X      ;!GET SIGN OF STEP
	PHA             ;!SAVE IT
	INX             ;!PAST SIGN TO LIMIT VALUE
	TXA
	PHA             ;!SAVE IT FOR COMPARE
	TYA             ;!POINTER TO STEP
	LDY #1          ;!MAKE PTR FOR MOVE
	JSR MOVF13      ;!STACK TO FAC
	LDA FORPNT      ;!GET INDEX VALUE
	LDY FORPNT+1    ;!TO THE ARG
	LDX FORTYP
	JSR MOVAMT      ;!MOVE BY TYPE
	JSR FADDT       ;!ADD & GET RES IN FAC
	JSR MOVVF       ;!RES BACK TO INDEX BY TYPE
	LDY #1          ;!GET POINTER TO LIMIT
	PLA             ;!IN STACK
	JSR MOVA13      ;!MOVE TO ARG
	JSR FSUBT       ;!ARG-FAC  LIMIT-SUM TO FAC
	JSR SIGN        ;!GET SIGN(-=-1;0=0;+=+1)
	STA INDEX1      ;!SAVE IT FOR A BIT
	CLC
	PLA             ;!SIGN OF INCREMENT
	ADC INDEX1      ;!=0 MEANS DONE--IT WORKS
	BEQ LOOPDN
;!-----  NOT DONE SET UP POINTERS --
	TSX             ;!GET TO TOP OF FOR STACK ENTRY
	JSR INCFST      ;!IT DOES IT
	TAX
STACKL=$100 ;BOTTOM OF STACK
	.BYT $BD        ;!---LDA STACKL-3,X
	.WORD STACKL-3
	STA CURLIN+1
	.BYT $BD        ;!---LDA STACKL-2,X
	.WORD STACKL-2
	STA CURLIN
	.BYT $BD        ;!---LDA STACKL-1,X
	.WORD STACKL-1
	STA TXTPTR+1
	.BYT $BD        ;!---LDA STACKL-0,X
	.WORD STACKL-0
	STA TXTPTR      ;!
NEWSGO	JMP NEWSTT
;-----
LOOPDN	TSX             ;!RESET STACK &
	JSR INCFST      ;!PROCESS MOR FOR
	TAX
	TXS 
	JSR CHRGOT
	CMP #44
	BNE NEWSGO
	JSR CHRGET
	JSR GETFOR
FRMNUM	JSR FRMEVL
CHKNUM	CLC
	.BYT $24
CHKSTR	SEC
CHKVAL	BIT VALTYP
	BMI DOCSTR
	BCS CHKERR
CHKOK	RTS
DOCSTR	BCS CHKOK
CHKERR	LDX #ERRTM
ERRGO4	JMP ERROR
.END
