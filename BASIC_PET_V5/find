.PAG 'FIND'
;**********************************
;
; CHANGE AND FIND COMMANDS
;
;**********************************
.SKI
CHANGE	NOP             ;COMMANDS GONE FOR TESTING RENUMBER
FIND	JMP SNERR
;
; GET STRINGS FOR FIND AND CHANGE
;
;
; INPUT RANGE PARMS
;
; 100-200
; 100-
; -200
; 100
;
RANGE	BCC RNG100      ;FROM CHRGOT, A # ?
	BEQ RNG100      ;NO - END OF LINE
	CMP #'-         ;A DASH
	BEQ RNG100
	CMP #MINUTK     ;TOKEN '-'
	BEQ RNG100
RNGERR	JMP SNERR       ;SYNTAX ERROR
RNG100	JSR LINGET      ;GET #
	JSR FNDLIN      ;FIND LINE OR SET PTRS
	JSR CHRGOT      ;GET LAST CHAR
	BEQ RNG200      ;SKIP END OF LINE
	CMP #'-         ;A DASH ?
	BEQ RNG150      ;YES
	CMP #MINUTK     ;TOKEN DASH?
	BNE RNGERR      ;NO - BAD SYNTAX
RNG150	JSR CHRGET      ;YES - SKIP DASH
	JSR LINGET      ;GET TO #
	BNE RNGERR      ;NOT A NUMBER ERROR
RNG200	LDA LINNUM
	ORA LINNUM+1    ;A TO # ?
	BNE RNGRTS      ;YES - THE DONE
	LDA #$FF        ;NO - MAKE MAX #
	STA LINNUM
	STA LINNUM+1
RNGRTS	RTS
;
;
; SETS INDEX1 AND INDEX2
;
; INDEX1=LOWTR
; INDEX2=VARTAB
;
SETPTR	LDA TXTPTR
	STA INDEX1
	LDA TXTPTR+1
	STA INDEX1+1
	LDA VARTAB
	STA INDEX2
	LDA VARTAB+1
	STA INDEX2+1
	RTS
;
; COMPAIRS INDEX1 AND INDEX2
;
CMPINX	LDA INDEX1
	CMP INDEX2
	BNE CMPRTS
	LDA INDEX1+1
	CMP INDEX2+1
CMPRTS	RTS
;
; MOVES MEMORY DOWN
;
MOVDWN	LDY COUNT
	INY
	LDA (INDEX1),Y
	LDY SVXT
	INY
	STA (INDEX1),Y
	JSR CMPINX      ;DONE ?
	BNE MDN100      ;NO
	RTS
MDN100	INC INDEX1
	BNE MOVDWN
	INC INDEX1+1
	BNE MOVDWN      ;ALWAYS
;
; MOVES MEMORY UP
;
MOVEUP	LDY COUNT
	LDA (INDEX2),Y
	LDY SVXT
	STA (INDEX2),Y
	JSR CMPINX      ;DONE ?
	BNE MUP100      ;NO
	RTS
MUP100	LDA INDEX2      ;ZERO ?
	BNE MUP200      ;NO - NO BORROW
	DEC INDEX2+1
MUP200	DEC INDEX2
	JMP MOVEUP
.END
